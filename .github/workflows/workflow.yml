name: 'Terraform'

on:
  push:
    branches: [ "master" ]
  pull_request:

permissions:
  contents: read

jobs:
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    # permissions:
    #   pull-requests: read
    outputs:
      # Expose matched filters as job 'packages' output variable
      packages: ${{ steps.filter.outputs.changes }}
      directories: ${{ steps.transform.outputs.directories }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - name: Checkout
      uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        base: ${{ github.ref }}
        list-files: shell
        filters: |
          infra:
            - infra/**
    - name: transform to directories
      id: transform
      continue-on-error: false
      run: |
        folders=()
        for f in ${{ steps.filter.outputs.infra_files }}; \
          do \
            echo "Adding $(dirname $f) to folders"; \
            folders+=($(dirname $f)); \
        done
        unique_folders=($(printf "%s\n" "${folders[@]}" | sort -u | tr '\n' ' '))
        echo "directories=$(jq --compact-output --null-input '$ARGS.positional' --args -- ${unique_folders[@]})" >> $GITHUB_OUTPUT

  terraform:
    needs: changes
    name: "Terraform"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJSON(needs.changes.outputs.directories) }}
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform plan -no-color -input=false
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        continue-on-error: true
        
      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
